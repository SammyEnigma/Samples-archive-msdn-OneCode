'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17626
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="TestDataBase")>  _
Partial Public Class LeaveDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertLeave(instance As Leave)
    End Sub
  Partial Private Sub UpdateLeave(instance As Leave)
    End Sub
  Partial Private Sub DeleteLeave(instance As Leave)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.DBOperate.My.MySettings.Default.TestDataBaseConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Leaves() As System.Data.Linq.Table(Of Leave)
		Get
			Return Me.GetTable(Of Leave)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Leave")>  _
Partial Public Class Leave
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LeaveID As System.Guid
	
	Private _LeaveName As String
	
	Private _LeaveDay As System.Nullable(Of Integer)
	
	Private _Comment As String
	
	Private _Status As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLeaveIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnLeaveIDChanged()
    End Sub
    Partial Private Sub OnLeaveNameChanging(value As String)
    End Sub
    Partial Private Sub OnLeaveNameChanged()
    End Sub
    Partial Private Sub OnLeaveDayChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLeaveDayChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveID", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true)>  _
	Public Property LeaveID() As System.Guid
		Get
			Return Me._LeaveID
		End Get
		Set
			If ((Me._LeaveID = value)  _
						= false) Then
				Me.OnLeaveIDChanging(value)
				Me.SendPropertyChanging
				Me._LeaveID = value
				Me.SendPropertyChanged("LeaveID")
				Me.OnLeaveIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property LeaveName() As String
		Get
			Return Me._LeaveName
		End Get
		Set
			If (String.Equals(Me._LeaveName, value) = false) Then
				Me.OnLeaveNameChanging(value)
				Me.SendPropertyChanging
				Me._LeaveName = value
				Me.SendPropertyChanged("LeaveName")
				Me.OnLeaveNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaveDay", DbType:="Int")>  _
	Public Property LeaveDay() As System.Nullable(Of Integer)
		Get
			Return Me._LeaveDay
		End Get
		Set
			If (Me._LeaveDay.Equals(value) = false) Then
				Me.OnLeaveDayChanging(value)
				Me.SendPropertyChanging
				Me._LeaveDay = value
				Me.SendPropertyChanged("LeaveDay")
				Me.OnLeaveDayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Comment() As String
		Get
			Return Me._Comment
		End Get
		Set
			If (String.Equals(Me._Comment, value) = false) Then
				Me.OnCommentChanging(value)
				Me.SendPropertyChanging
				Me._Comment = value
				Me.SendPropertyChanged("Comment")
				Me.OnCommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
