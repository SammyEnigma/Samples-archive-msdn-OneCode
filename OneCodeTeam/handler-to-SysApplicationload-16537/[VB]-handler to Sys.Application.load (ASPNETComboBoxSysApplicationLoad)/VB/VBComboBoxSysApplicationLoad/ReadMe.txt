==================================================================
               VBComboBoxSysApplicationLoad
==================================================================
USE

The sample illustrates the use of Sys.Application.add_load to add an handler to 
Sys.Application.load event. And the handler, usually scripted by users can 
successfully access DOMs generated by AJAX control toolkit. Otherwise, by simply 
placing a <script> tag in the page, may not find the DOMs, and their attriutes 
as expected.

This sample comes up because when some of the users use client side methods, say
getElementById(), getElementsByTagName() to access DOM's generated by AJAX 
control toolkit, they fail to get the attribute(s) of some specific DOMs. So, 
they can't script to add features at client side to meet their personal needs 
or project's requirement by ASP.net technology.
 
//////////////////////////////////////////////////////////////////
DEMO

Step 1
    Press CTRL+F5 to load the applicaion

Step 2
    After the page loaded, it pops up 2 alert boxes. Fist shows empty, second 
    shows "I am a TextBox"

Step 3
    Open WebForm1.aspx with an text editor. At line 39, comment out loader() 
    function - place two slashes before the code, something like //loader();

Step 4
    Remove the two slashed before Sys.Application.add_load(loader);

Step 5
    Save and press Ctrl+F5 to reload the applicaion

Step 6
    It now shows "Item 1" in the first alert box, and "I am a TextBox." 
    in the second alert box.

//////////////////////////////////////////////////////////////////
CODE LOGIC

Step 1
    Creat an empty ASP.NET Web Application Project

Step 2
    Add a Web Form page in the project

Step 3
    Install AJAX Control Toolkit

Step 4
    Add a ComboBox Control, whose ID is ComboBox1 with two ListItems

Step 5
    At code behind, in Page_Load. Add one ListItem to ComboBox1

Step 6
    Add one TextBox Control for comparison. 

Step 7 
    Create a javascript function to iterate all inputs whose type is "text". 
    Expect that "Item1" and "I am a TextBox." get alerted. Alternatively, 
    "added at code behind" is alerted because it is created at code behind.

    Note: As Both ComboBox and TextBox are rendered <input type="text" /> at 
    client side, expectedly they can be found by using 
    document.getElementsByTagName('input') and 
    element.getAttribute('type') == 'text'. But in fact only the TextBox 
    Control's value can be retrived.

Step 8
    Use Microsoft AJAX's Sys.Application.add_load to load the function created 
    in Step 7. This time both "Item1" and "I am a TextBox." are alerted.

//////////////////////////////////////////////////////////////////
REFERENCE

Ajax Control Toolkit ComboBox
http://www.asp.net/ajax/ajaxcontroltoolkit/Samples/ComboBox/ComboBox.aspx

Ajax
 Control Toolkit Library
http://www.asp.net/ajaxlibrary/Reference.Sys-Application-load-Event.ashx

getAttribute Method
http://msdn.microsoft.com/en-us/library/ms536429(v=vs.85).aspx