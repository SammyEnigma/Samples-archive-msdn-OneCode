'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.551
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

' Notice: Use of the service proxies that accompany this notice is subject to
'            the terms and conditions of the license agreement located at
'            http://go.microsoft.com/fwlink/?LinkID=202740
'            If you do not agree to these terms you may not use this content.
Imports System
Imports System.Collections.Generic
Imports System.Data.Services.Client
Imports System.Net
Imports System.IO
Namespace Bing


    Partial Public Class ExpandableSearchResult

        Private _ID As Guid

        Private _WebTotal As System.Nullable(Of Int64)

        Private _WebOffset As System.Nullable(Of Int64)

        Private _ImageTotal As System.Nullable(Of Int64)

        Private _ImageOffset As System.Nullable(Of Int64)

        Private _VideoTotal As System.Nullable(Of Int64)

        Private _VideoOffset As System.Nullable(Of Int64)

        Private _NewsTotal As System.Nullable(Of Int64)

        Private _NewsOffset As System.Nullable(Of Int64)

        Private _SpellingSuggestionsTotal As System.Nullable(Of Int64)

        Private _AlteredQuery As [String]

        Private _AlterationOverrideQuery As [String]

        Private _Web As System.Collections.ObjectModel.Collection(Of WebResult)

        Private _Image As System.Collections.ObjectModel.Collection(Of ImageResult)

        Private _Video As System.Collections.ObjectModel.Collection(Of VideoResult)

        Private _News As System.Collections.ObjectModel.Collection(Of NewsResult)

        Private _RelatedSearch As System.Collections.ObjectModel.Collection(Of RelatedSearchResult)

        Private _SpellingSuggestions As System.Collections.ObjectModel.Collection(Of SpellResult)

        Public Property ID() As Guid
            Get
                Return Me._ID
            End Get
            Set(value As Guid)
                Me._ID = value
            End Set
        End Property

        Public Property WebTotal() As System.Nullable(Of Int64)
            Get
                Return Me._WebTotal
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._WebTotal = value
            End Set
        End Property

        Public Property WebOffset() As System.Nullable(Of Int64)
            Get
                Return Me._WebOffset
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._WebOffset = value
            End Set
        End Property

        Public Property ImageTotal() As System.Nullable(Of Int64)
            Get
                Return Me._ImageTotal
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._ImageTotal = value
            End Set
        End Property

        Public Property ImageOffset() As System.Nullable(Of Int64)
            Get
                Return Me._ImageOffset
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._ImageOffset = value
            End Set
        End Property

        Public Property VideoTotal() As System.Nullable(Of Int64)
            Get
                Return Me._VideoTotal
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._VideoTotal = value
            End Set
        End Property

        Public Property VideoOffset() As System.Nullable(Of Int64)
            Get
                Return Me._VideoOffset
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._VideoOffset = value
            End Set
        End Property

        Public Property NewsTotal() As System.Nullable(Of Int64)
            Get
                Return Me._NewsTotal
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._NewsTotal = value
            End Set
        End Property

        Public Property NewsOffset() As System.Nullable(Of Int64)
            Get
                Return Me._NewsOffset
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._NewsOffset = value
            End Set
        End Property

        Public Property SpellingSuggestionsTotal() As System.Nullable(Of Int64)
            Get
                Return Me._SpellingSuggestionsTotal
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._SpellingSuggestionsTotal = value
            End Set
        End Property

        Public Property AlteredQuery() As [String]
            Get
                Return Me._AlteredQuery
            End Get
            Set(value As [String])
                Me._AlteredQuery = value
            End Set
        End Property

        Public Property AlterationOverrideQuery() As [String]
            Get
                Return Me._AlterationOverrideQuery
            End Get
            Set(value As [String])
                Me._AlterationOverrideQuery = value
            End Set
        End Property

        Public Property Web() As System.Collections.ObjectModel.Collection(Of WebResult)
            Get
                Return Me._Web
            End Get
            Set(value As System.Collections.ObjectModel.Collection(Of WebResult))
                Me._Web = value
            End Set
        End Property

        Public Property Image() As System.Collections.ObjectModel.Collection(Of ImageResult)
            Get
                Return Me._Image
            End Get
            Set(value As System.Collections.ObjectModel.Collection(Of ImageResult))
                Me._Image = value
            End Set
        End Property

        Public Property Video() As System.Collections.ObjectModel.Collection(Of VideoResult)
            Get
                Return Me._Video
            End Get
            Set(value As System.Collections.ObjectModel.Collection(Of VideoResult))
                Me._Video = value
            End Set
        End Property

        Public Property News() As System.Collections.ObjectModel.Collection(Of NewsResult)
            Get
                Return Me._News
            End Get
            Set(value As System.Collections.ObjectModel.Collection(Of NewsResult))
                Me._News = value
            End Set
        End Property

        Public Property RelatedSearch() As System.Collections.ObjectModel.Collection(Of RelatedSearchResult)
            Get
                Return Me._RelatedSearch
            End Get
            Set(value As System.Collections.ObjectModel.Collection(Of RelatedSearchResult))
                Me._RelatedSearch = value
            End Set
        End Property

        Public Property SpellingSuggestions() As System.Collections.ObjectModel.Collection(Of SpellResult)
            Get
                Return Me._SpellingSuggestions
            End Get
            Set(value As System.Collections.ObjectModel.Collection(Of SpellResult))
                Me._SpellingSuggestions = value
            End Set
        End Property
    End Class

    Partial Public Class WebResult

        Private _ID As Guid

        Private _Title As [String]

        Private _Description As [String]

        Private _DisplayUrl As [String]

        Private _Url As [String]

        Public Property ID() As Guid
            Get
                Return Me._ID
            End Get
            Set(value As Guid)
                Me._ID = value
            End Set
        End Property

        Public Property Title() As [String]
            Get
                Return Me._Title
            End Get
            Set(value As [String])
                Me._Title = value
            End Set
        End Property

        Public Property Description() As [String]
            Get
                Return Me._Description
            End Get
            Set(value As [String])
                Me._Description = value
            End Set
        End Property

        Public Property DisplayUrl() As [String]
            Get
                Return Me._DisplayUrl
            End Get
            Set(value As [String])
                Me._DisplayUrl = value
            End Set
        End Property

        Public Property Url() As [String]
            Get
                Return Me._Url
            End Get
            Set(value As [String])
                Me._Url = value
            End Set
        End Property
    End Class

    Partial Public Class ImageResult

        Private _ID As Guid

        Private _Title As [String]

        Private _MediaUrl As [String]

        Private _SourceUrl As [String]

        Private _DisplayUrl As [String]

        Private _Width As System.Nullable(Of Int32)

        Private _Height As System.Nullable(Of Int32)

        Private _FileSize As System.Nullable(Of Int64)

        Private _ContentType As [String]

        Private _Thumbnail As Thumbnail

        Public Property ID() As Guid
            Get
                Return Me._ID
            End Get
            Set(value As Guid)
                Me._ID = value
            End Set
        End Property

        Public Property Title() As [String]
            Get
                Return Me._Title
            End Get
            Set(value As [String])
                Me._Title = value
            End Set
        End Property

        Public Property MediaUrl() As [String]
            Get
                Return Me._MediaUrl
            End Get
            Set(value As [String])
                Me._MediaUrl = value
            End Set
        End Property

        Public Property SourceUrl() As [String]
            Get
                Return Me._SourceUrl
            End Get
            Set(value As [String])
                Me._SourceUrl = value
            End Set
        End Property

        Public Property DisplayUrl() As [String]
            Get
                Return Me._DisplayUrl
            End Get
            Set(value As [String])
                Me._DisplayUrl = value
            End Set
        End Property

        Public Property Width() As System.Nullable(Of Int32)
            Get
                Return Me._Width
            End Get
            Set(value As System.Nullable(Of Int32))
                Me._Width = value
            End Set
        End Property

        Public Property Height() As System.Nullable(Of Int32)
            Get
                Return Me._Height
            End Get
            Set(value As System.Nullable(Of Int32))
                Me._Height = value
            End Set
        End Property

        Public Property FileSize() As System.Nullable(Of Int64)
            Get
                Return Me._FileSize
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._FileSize = value
            End Set
        End Property

        Public Property ContentType() As [String]
            Get
                Return Me._ContentType
            End Get
            Set(value As [String])
                Me._ContentType = value
            End Set
        End Property

        Public Property Thumbnail() As Thumbnail
            Get
                Return Me._Thumbnail
            End Get
            Set(value As Thumbnail)
                Me._Thumbnail = value
            End Set
        End Property
    End Class

    Partial Public Class VideoResult

        Private _ID As Guid

        Private _Title As [String]

        Private _MediaUrl As [String]

        Private _DisplayUrl As [String]

        Private _RunTime As System.Nullable(Of Int32)

        Private _Thumbnail As Thumbnail

        Public Property ID() As Guid
            Get
                Return Me._ID
            End Get
            Set(value As Guid)
                Me._ID = value
            End Set
        End Property

        Public Property Title() As [String]
            Get
                Return Me._Title
            End Get
            Set(value As [String])
                Me._Title = value
            End Set
        End Property

        Public Property MediaUrl() As [String]
            Get
                Return Me._MediaUrl
            End Get
            Set(value As [String])
                Me._MediaUrl = value
            End Set
        End Property

        Public Property DisplayUrl() As [String]
            Get
                Return Me._DisplayUrl
            End Get
            Set(value As [String])
                Me._DisplayUrl = value
            End Set
        End Property

        Public Property RunTime() As System.Nullable(Of Int32)
            Get
                Return Me._RunTime
            End Get
            Set(value As System.Nullable(Of Int32))
                Me._RunTime = value
            End Set
        End Property

        Public Property Thumbnail() As Thumbnail
            Get
                Return Me._Thumbnail
            End Get
            Set(value As Thumbnail)
                Me._Thumbnail = value
            End Set
        End Property
    End Class

    Partial Public Class NewsResult

        Private _ID As Guid

        Private _Title As [String]

        Private _Url As [String]

        Private _Source As [String]

        Private _Description As [String]

        Private _Date As System.Nullable(Of DateTime)

        Public Property ID() As Guid
            Get
                Return Me._ID
            End Get
            Set(value As Guid)
                Me._ID = value
            End Set
        End Property

        Public Property Title() As [String]
            Get
                Return Me._Title
            End Get
            Set(value As [String])
                Me._Title = value
            End Set
        End Property

        Public Property Url() As [String]
            Get
                Return Me._Url
            End Get
            Set(value As [String])
                Me._Url = value
            End Set
        End Property

        Public Property Source() As [String]
            Get
                Return Me._Source
            End Get
            Set(value As [String])
                Me._Source = value
            End Set
        End Property

        Public Property Description() As [String]
            Get
                Return Me._Description
            End Get
            Set(value As [String])
                Me._Description = value
            End Set
        End Property

        Public Property [Date]() As System.Nullable(Of DateTime)
            Get
                Return Me._Date
            End Get
            Set(value As System.Nullable(Of DateTime))
                Me._Date = value
            End Set
        End Property
    End Class

    Partial Public Class RelatedSearchResult

        Private _ID As Guid

        Private _Title As [String]

        Private _BingUrl As [String]

        Public Property ID() As Guid
            Get
                Return Me._ID
            End Get
            Set(value As Guid)
                Me._ID = value
            End Set
        End Property

        Public Property Title() As [String]
            Get
                Return Me._Title
            End Get
            Set(value As [String])
                Me._Title = value
            End Set
        End Property

        Public Property BingUrl() As [String]
            Get
                Return Me._BingUrl
            End Get
            Set(value As [String])
                Me._BingUrl = value
            End Set
        End Property
    End Class

    Partial Public Class SpellResult

        Private _ID As Guid

        Private _Value As [String]

        Public Property ID() As Guid
            Get
                Return Me._ID
            End Get
            Set(value As Guid)
                Me._ID = value
            End Set
        End Property

        Public Property Value() As [String]
            Get
                Return Me._Value
            End Get
            Set(value As [String])
                Me._Value = value
            End Set
        End Property
    End Class

    Partial Public Class Thumbnail

        Private _MediaUrl As [String]

        Private _ContentType As [String]

        Private _Width As System.Nullable(Of Int32)

        Private _Height As System.Nullable(Of Int32)

        Private _FileSize As System.Nullable(Of Int64)

        Public Property MediaUrl() As [String]
            Get
                Return Me._MediaUrl
            End Get
            Set(value As [String])
                Me._MediaUrl = value
            End Set
        End Property

        Public Property ContentType() As [String]
            Get
                Return Me._ContentType
            End Get
            Set(value As [String])
                Me._ContentType = value
            End Set
        End Property

        Public Property Width() As System.Nullable(Of Int32)
            Get
                Return Me._Width
            End Get
            Set(value As System.Nullable(Of Int32))
                Me._Width = value
            End Set
        End Property

        Public Property Height() As System.Nullable(Of Int32)
            Get
                Return Me._Height
            End Get
            Set(value As System.Nullable(Of Int32))
                Me._Height = value
            End Set
        End Property

        Public Property FileSize() As System.Nullable(Of Int64)
            Get
                Return Me._FileSize
            End Get
            Set(value As System.Nullable(Of Int64))
                Me._FileSize = value
            End Set
        End Property
    End Class

    Partial Public Class BingSearchContainer
        Inherits System.Data.Services.Client.DataServiceContext

        Public Sub New(serviceRoot As Uri)
            MyBase.New(serviceRoot)
        End Sub

        ''' <summary>
        ''' </summary>
        ''' <param name="Sources">Bing search sources Sample Values : web+image+video+news+spell</param>
        ''' <param name="Query">Bing search query Sample Values : xbox</param>
        ''' <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
        ''' <param name="WebSearchOptions">Specify options for a request to the Web SourceType. Valid values are: DisableHostCollapsing, DisableQueryAlterations. Sample Values : DisableQueryAlterations</param>
        ''' <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
        ''' <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
        ''' <param name="Latitude">Latitude Sample Values : 47.603450</param>
        ''' <param name="Longitude">Longitude Sample Values : -122.329696</param>
        ''' <param name="WebFileType">File extensions to return Sample Values : XLS</param>
        ''' <param name="ImageFilters">Array of strings that filter the response the API sends based on size, aspect, color, style, face or any combination thereof. Valid values are: Size:Small, Size:Medium, Size:Large, Size:Width:[Width], Size:Height:[Height], Aspect:Square, Aspect:Wide, Aspect:Tall, Color:Color, Color:Monochrome, Style:Photo, Style:Graphics, Face:Face, Face:Portrait, Face:Other. Sample Values : Size:Small+Aspect:Square</param>
        ''' <param name="VideoFilters">Array of strings that filter the response the API sends based on size, aspect, color, style, face or any combination thereof. Valid values are: Duration:Short, Duration:Medium, Duration:Long, Aspect:Standard, Aspect:Widescreen, Resolution:Low, Resolution:Medium, Resolution:High. Sample Values : Duration:Short+Resolution:High</param>
        ''' <param name="VideoSortBy">The sort order of results returned Sample Values : Date</param>
        ''' <param name="NewsLocationOverride">Overrides Bing location detection. This parameter is only applicable in en-US market. Sample Values : US.WA</param>
        ''' <param name="NewsCategory">The category of news for which to provide results Sample Values : rt_Business</param>
        ''' <param name="NewsSortBy">The sort order of results returned Sample Values : Date</param>
        ''' 

        Public Function Composite(Sources As [String], Query As [String], Options As [String], WebSearchOptions As [String], Market As [String], Adult As [String], _
         Latitude As System.Nullable(Of [Double]), Longitude As System.Nullable(Of [Double]), WebFileType As [String], ImageFilters As [String], VideoFilters As [String], VideoSortBy As [String], _
         NewsLocationOverride As [String], NewsCategory As [String], NewsSortBy As [String]) As DataServiceQuery(Of ExpandableSearchResult)
            If (Sources Is Nothing) Then
                Throw New System.ArgumentNullException("Sources", "Sources value cannot be null")
            End If
            If (Query Is Nothing) Then
                Throw New System.ArgumentNullException("Query", "Query value cannot be null")
            End If
            Dim query1 As DataServiceQuery(Of ExpandableSearchResult)
            query1 = MyBase.CreateQuery(Of ExpandableSearchResult)("Composite")
            If (Sources IsNot Nothing) Then
                query1 = query1.AddQueryOption("Sources", String.Concat("'", System.Uri.EscapeDataString(Sources), "'"))
            End If
            If (Query IsNot Nothing) Then
                query1 = query1.AddQueryOption("Query", String.Concat("'", System.Uri.EscapeDataString(Query), "'"))
            End If
            If (Options IsNot Nothing) Then
                query1 = query1.AddQueryOption("Options", String.Concat("'", System.Uri.EscapeDataString(Options), "'"))
            End If
            If (WebSearchOptions IsNot Nothing) Then
                query1 = query1.AddQueryOption("WebSearchOptions", String.Concat("'", System.Uri.EscapeDataString(WebSearchOptions), "'"))
            End If
            If (Market IsNot Nothing) Then
                query1 = query1.AddQueryOption("Market", String.Concat("'", System.Uri.EscapeDataString(Market), "'"))
            End If
            If (Adult IsNot Nothing) Then
                query1 = query1.AddQueryOption("Adult", String.Concat("'", System.Uri.EscapeDataString(Adult), "'"))
            End If
            If ((Latitude IsNot Nothing) AndAlso (Latitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Latitude", Latitude.Value)
            End If
            If ((Longitude IsNot Nothing) AndAlso (Longitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Longitude", Longitude.Value)
            End If
            If (WebFileType IsNot Nothing) Then
                query1 = query1.AddQueryOption("WebFileType", String.Concat("'", System.Uri.EscapeDataString(WebFileType), "'"))
            End If
            If (ImageFilters IsNot Nothing) Then
                query1 = query1.AddQueryOption("ImageFilters", String.Concat("'", System.Uri.EscapeDataString(ImageFilters), "'"))
            End If
            If (VideoFilters IsNot Nothing) Then
                query1 = query1.AddQueryOption("VideoFilters", String.Concat("'", System.Uri.EscapeDataString(VideoFilters), "'"))
            End If
            If (VideoSortBy IsNot Nothing) Then
                query1 = query1.AddQueryOption("VideoSortBy", String.Concat("'", System.Uri.EscapeDataString(VideoSortBy), "'"))
            End If
            If (NewsLocationOverride IsNot Nothing) Then
                query1 = query1.AddQueryOption("NewsLocationOverride", String.Concat("'", System.Uri.EscapeDataString(NewsLocationOverride), "'"))
            End If
            If (NewsCategory IsNot Nothing) Then
                query1 = query1.AddQueryOption("NewsCategory", String.Concat("'", System.Uri.EscapeDataString(NewsCategory), "'"))
            End If
            If (NewsSortBy IsNot Nothing) Then
                query1 = query1.AddQueryOption("NewsSortBy", String.Concat("'", System.Uri.EscapeDataString(NewsSortBy), "'"))
            End If
            Return query1
        End Function

        ''' <summary>
        ''' </summary>
        ''' <param name="Query">Bing search query Sample Values : xbox</param>
        ''' <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
        ''' <param name="WebSearchOptions">Specify options for a request to the Web SourceType. Valid values are: DisableHostCollapsing, DisableQueryAlterations. Sample Values : DisableQueryAlterations</param>
        ''' <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
        ''' <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
        ''' <param name="Latitude">Latitude Sample Values : 47.603450</param>
        ''' <param name="Longitude">Longitude Sample Values : -122.329696</param>
        ''' <param name="WebFileType">File extensions to return Sample Values : XLS</param>
        Public Function Web(Query As [String], Options As [String], WebSearchOptions As [String], Market As [String], Adult As [String], Latitude As System.Nullable(Of [Double]), _
         Longitude As System.Nullable(Of [Double]), WebFileType As [String]) As DataServiceQuery(Of WebResult)
            If (Query Is Nothing) Then
                Throw New System.ArgumentNullException("Query", "Query value cannot be null")
            End If
            Dim query1 As DataServiceQuery(Of WebResult)
            query1 = MyBase.CreateQuery(Of WebResult)("Web")
            If (Query IsNot Nothing) Then
                query1 = query1.AddQueryOption("Query", String.Concat("'", System.Uri.EscapeDataString(Query), "'"))
            End If
            If (Options IsNot Nothing) Then
                query1 = query1.AddQueryOption("Options", String.Concat("'", System.Uri.EscapeDataString(Options), "'"))
            End If
            If (WebSearchOptions IsNot Nothing) Then
                query1 = query1.AddQueryOption("WebSearchOptions", String.Concat("'", System.Uri.EscapeDataString(WebSearchOptions), "'"))
            End If
            If (Market IsNot Nothing) Then
                query1 = query1.AddQueryOption("Market", String.Concat("'", System.Uri.EscapeDataString(Market), "'"))
            End If
            If (Adult IsNot Nothing) Then
                query1 = query1.AddQueryOption("Adult", String.Concat("'", System.Uri.EscapeDataString(Adult), "'"))
            End If
            If ((Latitude IsNot Nothing) AndAlso (Latitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Latitude", Latitude.Value)
            End If
            If ((Longitude IsNot Nothing) AndAlso (Longitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Longitude", Longitude.Value)
            End If
            If (WebFileType IsNot Nothing) Then
                query1 = query1.AddQueryOption("WebFileType", String.Concat("'", System.Uri.EscapeDataString(WebFileType), "'"))
            End If
            Return query1
        End Function

        ''' <summary>
        ''' </summary>
        ''' <param name="Query">Bing search query Sample Values : xbox</param>
        ''' <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
        ''' <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
        ''' <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
        ''' <param name="Latitude">Latitude Sample Values : 47.603450</param>
        ''' <param name="Longitude">Longitude Sample Values : -122.329696</param>
        ''' <param name="ImageFilters">Array of strings that filter the response the API sends based on size, aspect, color, style, face or any combination thereof. Valid values are: Size:Small, Size:Medium, Size:Large, Size:Width:[Width], Size:Height:[Height], Aspect:Square, Aspect:Wide, Aspect:Tall, Color:Color, Color:Monochrome, Style:Photo, Style:Graphics, Face:Face, Face:Portrait, Face:Other. Sample Values : Size:Small+Aspect:Square</param>
        Public Function Image(Query As [String], Options As [String], Market As [String], Adult As [String], Latitude As System.Nullable(Of [Double]), Longitude As System.Nullable(Of [Double]), _
         ImageFilters As [String]) As DataServiceQuery(Of ImageResult)
            If (Query Is Nothing) Then
                Throw New System.ArgumentNullException("Query", "Query value cannot be null")
            End If
            Dim query1 As DataServiceQuery(Of ImageResult)
            query1 = MyBase.CreateQuery(Of ImageResult)("Image")
            If (Query IsNot Nothing) Then
                query1 = query1.AddQueryOption("Query", String.Concat("'", System.Uri.EscapeDataString(Query), "'"))
            End If
            If (Options IsNot Nothing) Then
                query1 = query1.AddQueryOption("Options", String.Concat("'", System.Uri.EscapeDataString(Options), "'"))
            End If
            If (Market IsNot Nothing) Then
                query1 = query1.AddQueryOption("Market", String.Concat("'", System.Uri.EscapeDataString(Market), "'"))
            End If
            If (Adult IsNot Nothing) Then
                query1 = query1.AddQueryOption("Adult", String.Concat("'", System.Uri.EscapeDataString(Adult), "'"))
            End If
            If ((Latitude IsNot Nothing) AndAlso (Latitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Latitude", Latitude.Value)
            End If
            If ((Longitude IsNot Nothing) AndAlso (Longitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Longitude", Longitude.Value)
            End If
            If (ImageFilters IsNot Nothing) Then
                query1 = query1.AddQueryOption("ImageFilters", String.Concat("'", System.Uri.EscapeDataString(ImageFilters), "'"))
            End If
            Return query1
        End Function

        ''' <summary>
        ''' </summary>
        ''' <param name="Query">Bing search query Sample Values : xbox</param>
        ''' <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
        ''' <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
        ''' <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
        ''' <param name="Latitude">Latitude Sample Values : 47.603450</param>
        ''' <param name="Longitude">Longitude Sample Values : -122.329696</param>
        ''' <param name="VideoFilters">Array of strings that filter the response the API sends based on size, aspect, color, style, face or any combination thereof. Valid values are: Duration:Short, Duration:Medium, Duration:Long, Aspect:Standard, Aspect:Widescreen, Resolution:Low, Resolution:Medium, Resolution:High. Sample Values : Duration:Short+Resolution:High</param>
        ''' <param name="VideoSortBy">The sort order of results returned Sample Values : Date</param>
        Public Function Video(Query As [String], Options As [String], Market As [String], Adult As [String], Latitude As System.Nullable(Of [Double]), Longitude As System.Nullable(Of [Double]), _
         VideoFilters As [String], VideoSortBy As [String]) As DataServiceQuery(Of VideoResult)
            If (Query Is Nothing) Then
                Throw New System.ArgumentNullException("Query", "Query value cannot be null")
            End If
            Dim query1 As DataServiceQuery(Of VideoResult)
            query1 = MyBase.CreateQuery(Of VideoResult)("Video")
            If (Query IsNot Nothing) Then
                query1 = query1.AddQueryOption("Query", String.Concat("'", System.Uri.EscapeDataString(Query), "'"))
            End If
            If (Options IsNot Nothing) Then
                query1 = query1.AddQueryOption("Options", String.Concat("'", System.Uri.EscapeDataString(Options), "'"))
            End If
            If (Market IsNot Nothing) Then
                query1 = query1.AddQueryOption("Market", String.Concat("'", System.Uri.EscapeDataString(Market), "'"))
            End If
            If (Adult IsNot Nothing) Then
                query1 = query1.AddQueryOption("Adult", String.Concat("'", System.Uri.EscapeDataString(Adult), "'"))
            End If
            If ((Latitude IsNot Nothing) AndAlso (Latitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Latitude", Latitude.Value)
            End If
            If ((Longitude IsNot Nothing) AndAlso (Longitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Longitude", Longitude.Value)
            End If
            If (VideoFilters IsNot Nothing) Then
                query1 = query1.AddQueryOption("VideoFilters", String.Concat("'", System.Uri.EscapeDataString(VideoFilters), "'"))
            End If
            If (VideoSortBy IsNot Nothing) Then
                query1 = query1.AddQueryOption("VideoSortBy", String.Concat("'", System.Uri.EscapeDataString(VideoSortBy), "'"))
            End If
            Return query1
        End Function

        ''' <summary>
        ''' </summary>
        ''' <param name="Query">Bing search query Sample Values : xbox</param>
        ''' <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
        ''' <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
        ''' <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
        ''' <param name="Latitude">Latitude Sample Values : 47.603450</param>
        ''' <param name="Longitude">Longitude Sample Values : -122.329696</param>
        ''' <param name="NewsLocationOverride">Overrides Bing location detection. This parameter is only applicable in en-US market. Sample Values : US.WA</param>
        ''' <param name="NewsCategory">The category of news for which to provide results Sample Values : rt_Business</param>
        ''' <param name="NewsSortBy">The sort order of results returned Sample Values : Date</param>
        Public Function News(Query As [String], Options As [String], Market As [String], Adult As [String], Latitude As System.Nullable(Of [Double]), Longitude As System.Nullable(Of [Double]), _
         NewsLocationOverride As [String], NewsCategory As [String], NewsSortBy As [String]) As DataServiceQuery(Of NewsResult)
            If (Query Is Nothing) Then
                Throw New System.ArgumentNullException("Query", "Query value cannot be null")
            End If
            Dim query1 As DataServiceQuery(Of NewsResult)
            query1 = MyBase.CreateQuery(Of NewsResult)("News")
            If (Query IsNot Nothing) Then
                query1 = query1.AddQueryOption("Query", String.Concat("'", System.Uri.EscapeDataString(Query), "'"))
            End If
            If (Options IsNot Nothing) Then
                query1 = query1.AddQueryOption("Options", String.Concat("'", System.Uri.EscapeDataString(Options), "'"))
            End If
            If (Market IsNot Nothing) Then
                query1 = query1.AddQueryOption("Market", String.Concat("'", System.Uri.EscapeDataString(Market), "'"))
            End If
            If (Adult IsNot Nothing) Then
                query1 = query1.AddQueryOption("Adult", String.Concat("'", System.Uri.EscapeDataString(Adult), "'"))
            End If
            If ((Latitude IsNot Nothing) AndAlso (Latitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Latitude", Latitude.Value)
            End If
            If ((Longitude IsNot Nothing) AndAlso (Longitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Longitude", Longitude.Value)
            End If
            If (NewsLocationOverride IsNot Nothing) Then
                query1 = query1.AddQueryOption("NewsLocationOverride", String.Concat("'", System.Uri.EscapeDataString(NewsLocationOverride), "'"))
            End If
            If (NewsCategory IsNot Nothing) Then
                query1 = query1.AddQueryOption("NewsCategory", String.Concat("'", System.Uri.EscapeDataString(NewsCategory), "'"))
            End If
            If (NewsSortBy IsNot Nothing) Then
                query1 = query1.AddQueryOption("NewsSortBy", String.Concat("'", System.Uri.EscapeDataString(NewsSortBy), "'"))
            End If
            Return query1
        End Function

        ''' <summary>
        ''' </summary>
        ''' <param name="Query">Bing search query Sample Values : xbox</param>
        ''' <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
        ''' <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
        ''' <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
        ''' <param name="Latitude">Latitude Sample Values : 47.603450</param>
        ''' <param name="Longitude">Longitude Sample Values : -122.329696</param>
        Public Function RelatedSearch(Query As [String], Options As [String], Market As [String], Adult As [String], Latitude As System.Nullable(Of [Double]), Longitude As System.Nullable(Of [Double])) As DataServiceQuery(Of RelatedSearchResult)
            If (Query Is Nothing) Then
                Throw New System.ArgumentNullException("Query", "Query value cannot be null")
            End If
            Dim query1 As DataServiceQuery(Of RelatedSearchResult)
            query1 = MyBase.CreateQuery(Of RelatedSearchResult)("RelatedSearch")
            If (Query IsNot Nothing) Then
                query1 = query1.AddQueryOption("Query", String.Concat("'", System.Uri.EscapeDataString(Query), "'"))
            End If
            If (Options IsNot Nothing) Then
                query1 = query1.AddQueryOption("Options", String.Concat("'", System.Uri.EscapeDataString(Options), "'"))
            End If
            If (Market IsNot Nothing) Then
                query1 = query1.AddQueryOption("Market", String.Concat("'", System.Uri.EscapeDataString(Market), "'"))
            End If
            If (Adult IsNot Nothing) Then
                query1 = query1.AddQueryOption("Adult", String.Concat("'", System.Uri.EscapeDataString(Adult), "'"))
            End If
            If ((Latitude IsNot Nothing) AndAlso (Latitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Latitude", Latitude.Value)
            End If
            If ((Longitude IsNot Nothing) AndAlso (Longitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Longitude", Longitude.Value)
            End If
            Return query1
        End Function

        ''' <summary>
        ''' </summary>
        ''' <param name="Query">Bing search query Sample Values : xblox</param>
        ''' <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
        ''' <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
        ''' <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
        ''' <param name="Latitude">Latitude Sample Values : 47.603450</param>
        ''' <param name="Longitude">Longitude Sample Values : -122.329696</param>
        Public Function SpellingSuggestions(Query As [String], Options As [String], Market As [String], Adult As [String], Latitude As System.Nullable(Of [Double]), Longitude As System.Nullable(Of [Double])) As DataServiceQuery(Of SpellResult)
            If (Query Is Nothing) Then
                Throw New System.ArgumentNullException("Query", "Query value cannot be null")
            End If
            Dim query1 As DataServiceQuery(Of SpellResult)
            query1 = MyBase.CreateQuery(Of SpellResult)("SpellingSuggestions")
            If (Query IsNot Nothing) Then
                query1 = query1.AddQueryOption("Query", String.Concat("'", System.Uri.EscapeDataString(Query), "'"))
            End If
            If (Options IsNot Nothing) Then
                query1 = query1.AddQueryOption("Options", String.Concat("'", System.Uri.EscapeDataString(Options), "'"))
            End If
            If (Market IsNot Nothing) Then
                query1 = query1.AddQueryOption("Market", String.Concat("'", System.Uri.EscapeDataString(Market), "'"))
            End If
            If (Adult IsNot Nothing) Then
                query1 = query1.AddQueryOption("Adult", String.Concat("'", System.Uri.EscapeDataString(Adult), "'"))
            End If
            If ((Latitude IsNot Nothing) AndAlso (Latitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Latitude", Latitude.Value)
            End If
            If ((Longitude IsNot Nothing) AndAlso (Longitude.HasValue = True)) Then
                query1 = query1.AddQueryOption("Longitude", Longitude.Value)
            End If
            Return query1
        End Function
    End Class
End Namespace