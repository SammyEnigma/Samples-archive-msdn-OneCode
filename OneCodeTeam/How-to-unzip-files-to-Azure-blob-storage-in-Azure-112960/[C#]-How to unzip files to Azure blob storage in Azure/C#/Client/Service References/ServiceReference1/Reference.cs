//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IUnZipWcfService")]
    public interface IUnZipWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnZipWcfService/UnZipFiles", ReplyAction="http://tempuri.org/IUnZipWcfService/UnZipFilesResponse")]
        bool UnZipFiles(string strPath, string strContainerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnZipWcfService/UnZipFiles", ReplyAction="http://tempuri.org/IUnZipWcfService/UnZipFilesResponse")]
        System.Threading.Tasks.Task<bool> UnZipFilesAsync(string strPath, string strContainerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnZipWcfService/GetAllContainer", ReplyAction="http://tempuri.org/IUnZipWcfService/GetAllContainerResponse")]
        string[] GetAllContainer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnZipWcfService/GetAllContainer", ReplyAction="http://tempuri.org/IUnZipWcfService/GetAllContainerResponse")]
        System.Threading.Tasks.Task<string[]> GetAllContainerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnZipWcfService/GetAllBlob", ReplyAction="http://tempuri.org/IUnZipWcfService/GetAllBlobResponse")]
        string[] GetAllBlob(string strContainerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnZipWcfService/GetAllBlob", ReplyAction="http://tempuri.org/IUnZipWcfService/GetAllBlobResponse")]
        System.Threading.Tasks.Task<string[]> GetAllBlobAsync(string strContainerName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUnZipWcfServiceChannel : Client.ServiceReference1.IUnZipWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnZipWcfServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference1.IUnZipWcfService>, Client.ServiceReference1.IUnZipWcfService {
        
        public UnZipWcfServiceClient() {
        }
        
        public UnZipWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnZipWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnZipWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnZipWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UnZipFiles(string strPath, string strContainerName) {
            return base.Channel.UnZipFiles(strPath, strContainerName);
        }
        
        public System.Threading.Tasks.Task<bool> UnZipFilesAsync(string strPath, string strContainerName) {
            return base.Channel.UnZipFilesAsync(strPath, strContainerName);
        }
        
        public string[] GetAllContainer() {
            return base.Channel.GetAllContainer();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllContainerAsync() {
            return base.Channel.GetAllContainerAsync();
        }
        
        public string[] GetAllBlob(string strContainerName) {
            return base.Channel.GetAllBlob(strContainerName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllBlobAsync(string strContainerName) {
            return base.Channel.GetAllBlobAsync(strContainerName);
        }
    }
}
