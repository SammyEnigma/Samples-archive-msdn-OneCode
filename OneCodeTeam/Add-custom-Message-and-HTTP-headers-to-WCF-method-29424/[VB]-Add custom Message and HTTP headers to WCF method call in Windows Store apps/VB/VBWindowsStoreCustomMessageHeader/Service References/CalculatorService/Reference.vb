'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34011
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


'
'This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
'
Namespace CalculatorService
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="CalculatorService.ICalculatorService")>  _
    Public Interface ICalculatorService
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ICalculatorService/Add", ReplyAction:="http://tempuri.org/ICalculatorService/AddResponse")>  _
        Function AddAsync(ByVal n1 As Double, ByVal n2 As Double) As System.Threading.Tasks.Task(Of Double)
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface ICalculatorServiceChannel
        Inherits CalculatorService.ICalculatorService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class CalculatorServiceClient
        Inherits System.ServiceModel.ClientBase(Of CalculatorService.ICalculatorService)
        Implements CalculatorService.ICalculatorService
        
        ''' <summary>
        ''' Implement this partial method to configure the service endpoint.
        ''' </summary>
        ''' <param name="serviceEndpoint">The endpoint to configure</param>
        ''' <param name="clientCredentials">The client credentials</param>
        Partial Private Shared Sub ConfigureEndpoint(ByVal serviceEndpoint As System.ServiceModel.Description.ServiceEndpoint, ByVal clientCredentials As System.ServiceModel.Description.ClientCredentials)
        End Sub
        
        Public Sub New()
            MyBase.New(CalculatorServiceClient.GetDefaultBinding, CalculatorServiceClient.GetDefaultEndpointAddress)
            Me.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ICalculatorService.ToString
            ConfigureEndpoint(Me.Endpoint, Me.ClientCredentials)
        End Sub
        
        Public Sub New(ByVal endpointConfiguration As EndpointConfiguration)
            MyBase.New(CalculatorServiceClient.GetBindingForEndpoint(endpointConfiguration), CalculatorServiceClient.GetEndpointAddress(endpointConfiguration))
            Me.Endpoint.Name = endpointConfiguration.ToString
            ConfigureEndpoint(Me.Endpoint, Me.ClientCredentials)
        End Sub
        
        Public Sub New(ByVal endpointConfiguration As EndpointConfiguration, ByVal remoteAddress As String)
            MyBase.New(CalculatorServiceClient.GetBindingForEndpoint(endpointConfiguration), New System.ServiceModel.EndpointAddress(remoteAddress))
            Me.Endpoint.Name = endpointConfiguration.ToString
            ConfigureEndpoint(Me.Endpoint, Me.ClientCredentials)
        End Sub
        
        Public Sub New(ByVal endpointConfiguration As EndpointConfiguration, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(CalculatorServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
            Me.Endpoint.Name = endpointConfiguration.ToString
            ConfigureEndpoint(Me.Endpoint, Me.ClientCredentials)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function AddAsync(ByVal n1 As Double, ByVal n2 As Double) As System.Threading.Tasks.Task(Of Double) Implements CalculatorService.ICalculatorService.AddAsync
            Return MyBase.Channel.AddAsync(n1, n2)
        End Function
        
        Public Overridable Function OpenAsync() As System.Threading.Tasks.Task
            Return System.Threading.Tasks.Task.Factory.FromAsync(CType(Me,System.ServiceModel.ICommunicationObject).BeginOpen(Nothing, Nothing), AddressOf CType(Me,System.ServiceModel.ICommunicationObject).EndOpen)
        End Function
        
        Public Overridable Function CloseAsync() As System.Threading.Tasks.Task
            Return System.Threading.Tasks.Task.Factory.FromAsync(CType(Me,System.ServiceModel.ICommunicationObject).BeginClose(Nothing, Nothing), AddressOf CType(Me,System.ServiceModel.ICommunicationObject).EndClose)
        End Function
        
        Private Shared Function GetBindingForEndpoint(ByVal endpointConfiguration As EndpointConfiguration) As System.ServiceModel.Channels.Binding
            If (endpointConfiguration = EndpointConfiguration.BasicHttpBinding_ICalculatorService) Then
                Dim result As System.ServiceModel.BasicHttpBinding = New System.ServiceModel.BasicHttpBinding()
                result.MaxBufferSize = Integer.MaxValue
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max
                result.MaxReceivedMessageSize = Integer.MaxValue
                result.AllowCookies = true
                Return result
            End If
            Throw New System.InvalidOperationException(String.Format("Could not find endpoint with name '{0}'.", endpointConfiguration))
        End Function
        
        Private Shared Function GetEndpointAddress(ByVal endpointConfiguration As EndpointConfiguration) As System.ServiceModel.EndpointAddress
            If (endpointConfiguration = EndpointConfiguration.BasicHttpBinding_ICalculatorService) Then
                Return New System.ServiceModel.EndpointAddress("http://localhost:8001/")
            End If
            Throw New System.InvalidOperationException(String.Format("Could not find endpoint with name '{0}'.", endpointConfiguration))
        End Function
        
        Private Shared Function GetDefaultBinding() As System.ServiceModel.Channels.Binding
            Return CalculatorServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ICalculatorService)
        End Function
        
        Private Shared Function GetDefaultEndpointAddress() As System.ServiceModel.EndpointAddress
            Return CalculatorServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ICalculatorService)
        End Function
        
        Public Enum EndpointConfiguration
            
            BasicHttpBinding_ICalculatorService
        End Enum
    End Class
End Namespace
